"""Build Modelo Repasse Medico

Revision ID: edaabd0bb8ee
Revises: 58e057ca252b
Create Date: 2025-03-03 14:24:54.366686

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'edaabd0bb8ee'
down_revision: Union[str, None] = '58e057ca252b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SEQUENCE public.id_atendime_seq")
    op.create_table('atendime',
        sa.Column('id_atendime', sa.BigInteger(), server_default=sa.text("nextval('public.id_atendime_seq'::regclass)"), nullable=False),
        sa.Column('CD_ATENDIMENTO', sa.String(), nullable=True),
        sa.Column('DT_ATENDIMENTO', sa.DateTime(), nullable=True),
        sa.Column('CD_PACIENTE', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_atendime')
    )
    op.execute("CREATE SEQUENCE public.id_ati_med_seq")
    op.create_table('ati_med',
        sa.Column('id_ati_med', sa.BigInteger(), server_default=sa.text("nextval('public.id_ati_med_seq'::regclass)"), nullable=False),
        sa.Column('CD_ATI_MED', sa.String(), nullable=True),
        sa.Column('DS_ATI_MED', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_ati_med')
    )
    op.execute("CREATE SEQUENCE public.id_convenio_seq")
    op.create_table('convenio',
        sa.Column('id_convenio', sa.BigInteger(), server_default=sa.text("nextval('public.id_convenio_seq'::regclass)"), nullable=False),
        sa.Column('CD_CONVENIO', sa.String(), nullable=True),
        sa.Column('NM_CONVENIO', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_convenio')
    )
    op.execute("CREATE SEQUENCE public.id_gru_fat_seq")
    op.create_table('gru_fat',
        sa.Column('id_gru_fat', sa.BigInteger(), server_default=sa.text("nextval('public.id_gru_fat_seq'::regclass)"), nullable=False),
        sa.Column('CD_GRU_FAT', sa.String(), nullable=True),
        sa.Column('DS_GRU_FAT', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_gru_fat')
    )
    op.execute("CREATE SEQUENCE public.id_gru_pro_seq")
    op.create_table('gru_pro',
        sa.Column('id_gru_pro', sa.BigInteger(), server_default=sa.text("nextval('public.id_gru_pro_seq'::regclass)"), nullable=False),
        sa.Column('CD_GRU_PRO', sa.String(), nullable=True),
        sa.Column('DS_GRU_PRO', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_gru_pro')
    )
    op.execute("CREATE SEQUENCE public.id_it_repasse_seq")
    op.create_table('it_repasse',
        sa.Column('id_it_repasse', sa.BigInteger(), server_default=sa.text("nextval('public.id_it_repasse_seq'::regclass)"), nullable=False),
        sa.Column('CD_IT_REPASSE', sa.String(), nullable=True),
        sa.Column('CD_REPASSE', sa.String(), nullable=True),
        sa.Column('CD_REG_AMB', sa.String(), nullable=True),
        sa.Column('CD_LANCAMENTO_AMB', sa.String(), nullable=True),
        sa.Column('CD_REG_FAT', sa.String(), nullable=True),
        sa.Column('CD_LANCAMENTO_FAT', sa.String(), nullable=True),
        sa.Column('CD_ATI_MED', sa.String(), nullable=True),
        sa.Column('CD_PRESTADOR_REPASSE', sa.String(), nullable=True),
        sa.Column('VL_REPASSE', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_it_repasse')
    )
    op.execute("CREATE SEQUENCE public.id_it_repasse_sih_seq")
    op.create_table('it_repasse_sih',
        sa.Column('id_it_repasse_sih', sa.BigInteger(), server_default=sa.text("nextval('public.id_it_repasse_sih_seq'::regclass)"), nullable=False),
        sa.Column('CD_IT_REPASSE_SIH', sa.String(), nullable=True),
        sa.Column('CD_REPASSE', sa.String(), nullable=True),
        sa.Column('CD_REG_FAT', sa.String(), nullable=True),
        sa.Column('CD_LANCAMENTO', sa.String(), nullable=True),
        sa.Column('CD_ATI_MED', sa.String(), nullable=True),
        sa.Column('CD_PRESTADOR_REPASSE', sa.String(), nullable=True),
        sa.Column('VL_REPASSE', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_it_repasse_sih')
    )
    op.execute("CREATE SEQUENCE public.id_itreg_amb_seq")
    op.create_table('itreg_amb',
        sa.Column('id_itreg_amb', sa.BigInteger(), server_default=sa.text("nextval('public.id_itreg_amb_seq'::regclass)"), nullable=False),
        sa.Column('CD_PRO_FAT', sa.String(), nullable=True),
        sa.Column('CD_REG_AMB', sa.String(), nullable=True),
        sa.Column('CD_PRESTADOR', sa.String(), nullable=True),
        sa.Column('CD_ATI_MED', sa.String(), nullable=True),
        sa.Column('CD_LANCAMENTO', sa.String(), nullable=True),
        sa.Column('CD_GRU_FAT', sa.String(), nullable=True),
        sa.Column('CD_CONVENIO', sa.String(), nullable=True),
        sa.Column('CD_ATENDIMENTO', sa.String(), nullable=True),
        sa.Column('DT_PRODUCAO', sa.DateTime(), nullable=True),
        sa.Column('DT_FECHAMENTO', sa.DateTime(), nullable=True),
        sa.Column('DT_ITREG_AMB', sa.DateTime(), nullable=True),
        sa.Column('SN_FECHADA', sa.String(), nullable=True),
        sa.Column('SN_REPASSADO', sa.String(), nullable=True),
        sa.Column('SN_PERTENCE_PACOTE', sa.String(), nullable=True),
        sa.Column('VL_UNITARIO', sa.String(), nullable=True),
        sa.Column('VL_TOTAL_CONTA', sa.String(), nullable=True),
        sa.Column('VL_BASE_REPASSADO', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_itreg_amb')
    )
    op.execute("CREATE SEQUENCE public.id_itreg_fat_seq")
    op.create_table('itreg_fat',
        sa.Column('id_itreg_fat', sa.BigInteger(), server_default=sa.text("nextval('public.id_itreg_fat_seq'::regclass)"), nullable=False),
        sa.Column('CD_PRO_FAT', sa.String(), nullable=True),
        sa.Column('CD_REG_FAT', sa.String(), nullable=True),
        sa.Column('CD_PRESTADOR', sa.String(), nullable=True),
        sa.Column('CD_ATI_MED', sa.String(), nullable=True),
        sa.Column('CD_LANCAMENTO', sa.String(), nullable=True),
        sa.Column('CD_GRU_FAT', sa.String(), nullable=True),
        sa.Column('DT_PRODUCAO', sa.DateTime(), nullable=True),
        sa.Column('DT_ITREG_FAT', sa.DateTime(), nullable=True),
        sa.Column('SN_REPASSADO', sa.String(), nullable=True),
        sa.Column('SN_PERTENCE_PACOTE', sa.String(), nullable=True),
        sa.Column('VL_UNITARIO', sa.String(), nullable=True),
        sa.Column('VL_TOTAL_CONTA', sa.String(), nullable=True),
        sa.Column('VL_BASE_REPASSADO', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_itreg_fat')
    )
    op.execute("CREATE SEQUENCE public.id_paciente_seq")
    op.create_table('paciente',
        sa.Column('id_paciente', sa.BigInteger(), server_default=sa.text("nextval('public.id_paciente_seq'::regclass)"), nullable=False),
        sa.Column('CD_PACIENTE', sa.String(), nullable=True),
        sa.Column('NM_PACIENTE', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_paciente')
    )
    op.execute("CREATE SEQUENCE public.id_prestador_seq")
    op.create_table('prestador',
        sa.Column('id_prestador', sa.BigInteger(), server_default=sa.text("nextval('public.id_prestador_seq'::regclass)"), nullable=False),
        sa.Column('CD_PRESTADOR', sa.String(), nullable=True),
        sa.Column('NM_PRESTADOR', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_prestador')
    )
    op.execute("CREATE SEQUENCE public.id_pro_fat_seq")
    op.create_table('pro_fat',
        sa.Column('id_pro_fat', sa.BigInteger(), server_default=sa.text("nextval('public.id_pro_fat_seq'::regclass)"), nullable=False),
        sa.Column('CD_PRO_FAT', sa.String(), nullable=True),
        sa.Column('CD_GRU_PRO', sa.String(), nullable=True),
        sa.Column('DS_PRO_FAT', sa.String(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_pro_fat')
    )
    op.execute("CREATE SEQUENCE public.id_reg_amb_seq")
    op.create_table('reg_amb',
        sa.Column('id_reg_amb', sa.BigInteger(), server_default=sa.text("nextval('public.id_reg_amb_seq'::regclass)"), nullable=False),
        sa.Column('CD_REG_AMB', sa.String(), nullable=True),
        sa.Column('CD_REMESSA', sa.String(), nullable=True),
        sa.Column('DT_REMESSA', sa.DateTime(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_reg_amb')
    )
    op.execute("CREATE SEQUENCE public.id_reg_fat_seq")
    op.create_table('reg_fat',
        sa.Column('id_reg_fat', sa.BigInteger(), server_default=sa.text("nextval('public.id_reg_fat_seq'::regclass)"), nullable=False),
        sa.Column('CD_REG_FAT', sa.String(), nullable=True),
        sa.Column('CD_CONVENIO', sa.String(), nullable=True),
        sa.Column('CD_ATENDIMENTO', sa.String(), nullable=True),
        sa.Column('CD_REMESSA', sa.String(), nullable=True),
        sa.Column('DT_REMESSA', sa.DateTime(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_reg_fat')
    )
    op.execute("CREATE SEQUENCE public.id_repasse_seq")
    op.create_table('repasse',
        sa.Column('id_repasse', sa.BigInteger(), server_default=sa.text("nextval('public.id_repasse_seq'::regclass)"), nullable=False),
        sa.Column('CD_REPASSE', sa.String(), nullable=True),
        sa.Column('TP_REPASSE', sa.String(), nullable=True),
        sa.Column('DT_COMPETENCIA', sa.DateTime(), nullable=True),
        sa.Column('DT_REPASSE', sa.DateTime(), nullable=True),
        sa.Column('DT_EXTRACAO', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id_repasse')
    )



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('repasse')
    op.execute("DROP SEQUENCE public.id_repasse_seq")
    op.drop_table('reg_fat')
    op.execute("DROP SEQUENCE public.id_reg_fat_seq")
    op.drop_table('reg_amb')
    op.execute("DROP SEQUENCE public.id_reg_amb_seq")
    op.drop_table('pro_fat')
    op.execute("DROP SEQUENCE public.id_pro_fat_seq")
    op.drop_table('prestador')
    op.execute("DROP SEQUENCE public.id_prestador_seq")
    op.drop_table('paciente')
    op.execute("DROP SEQUENCE public.id_paciente_seq")
    op.drop_table('itreg_fat')
    op.execute("DROP SEQUENCE public.id_itreg_fat_seq")
    op.drop_table('itreg_amb')
    op.execute("DROP SEQUENCE public.id_itreg_amb_seq")
    op.drop_table('it_repasse_sih')
    op.execute("DROP SEQUENCE public.id_it_repasse_sih_seq")
    op.drop_table('it_repasse')
    op.execute("DROP SEQUENCE public.id_it_repasse_seq")
    op.drop_table('gru_pro')
    op.execute("DROP SEQUENCE public.id_gru_pro_seq")
    op.drop_table('gru_fat')
    op.execute("DROP SEQUENCE public.id_gru_fat_seq")
    op.drop_table('convenio')
    op.execute("DROP SEQUENCE public.id_convenio_seq")
    op.drop_table('ati_med')
    op.execute("DROP SEQUENCE public.id_ati_med_seq")
    op.drop_table('atendime')
    op.execute("DROP SEQUENCE public.id_atendime_seq")